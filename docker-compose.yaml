version: '3.8'

services:
  
  agrisistance-land-db:
    image: postgres:13
    restart: always
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_LAND_DB}
    networks:
      - agrisistance-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"] 
      interval: 10s
      timeout: 5s
      retries: 5

  agrisistance-user-db:
    image: postgres:13
    restart: always
    ports:
      - "5435:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_USER_DB}
    networks:
      - agrisistance-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  agrisistance-network-db:
    image: postgres:13
    restart: always
    ports:
      - "5436:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_NETWORK_DB}
    networks:
      - agrisistance-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]  # Use POSTGRES_USER instead of "network"
      interval: 10s
      timeout: 5s
      retries: 5


  agrisistance-redis-cache:
    image: redis:alpine
    restart: always
    ports:
      - "6380:6379"
    networks:
      - agrisistance-network

  prisma-migrations:
    image: node:16
    depends_on:
      agrisistance-user-db:
        condition: service_healthy
      agrisistance-land-db:
        condition: service_healthy
      agrisistance-network-db:
        condition: service_healthy
    volumes:
      - .:/app
    working_dir: /app
    networks:
      - agrisistance-network
    command: >
      sh -c "
        npx prisma migrate deploy --schema=./apps/agrisistance-user-service/prisma/schema.user.prisma &&
        npx prisma migrate deploy --schema=./apps/agrisistance-land-service/prisma/schema.land.prisma &&
        npx prisma migrate deploy --schema=./apps/agrisistance-network-service/prisma/schema.network.prisma       
      "
  prisma-generations:
    image: node:16
    depends_on:
      agrisistance-user-db:
        condition: service_healthy
      agrisistance-land-db:
        condition: service_healthy
      agrisistance-network-db:
        condition: service_healthy
    volumes:
      - .:/app
    working_dir: /app
    networks:
      - agrisistance-network
    command: >
      sh -c "
        npx prisma generate --schema=./apps/agrisistance-user-service/prisma/schema.user.prisma &&
        npx prisma generate --schema=./apps/agrisistance-user-service/prisma/schema.land.prisma &&
        npx prisma generate --schema=./apps/agrisistance-user-service/prisma/schema.network.prisma &&
        npx prisma generate --schema=./apps/agrisistance-land-service/prisma/schema.land.prisma &&
        npx prisma generate --schema=./apps/agrisistance-network-service/prisma/schema.network.prisma       
      "

  
  agrisistance-api-gateway:
    build:
      context: .
      dockerfile: ./apps/agrisistance-api-gateway/Dockerfile
    depends_on:
      prisma-migrations:
        condition: service_completed_successfully
      prisma-generations:
        condition: service_completed_successfully
    restart: always
    ports:
      - ${PORT}:${PORT}
    networks:
      - agrisistance-network
    command: npm run start:dev agrisistance-api-gateway

  agrisistance-user-service:
    build:
      context: .
      dockerfile: ./apps/agrisistance-user-service/Dockerfile
    depends_on:
      prisma-migrations:
        condition: service_completed_successfully
    restart: always
    ports:
      - ${USER_PORT}:${USER_PORT}
      - 5555:5555
    networks:
      - agrisistance-network
    command: npm run start:dev agrisistance-user-service

  agrisistance-land-service:
    build:
      context: .
      dockerfile: ./apps/agrisistance-land-service/Dockerfile
    depends_on:
      prisma-migrations:
        condition: service_completed_successfully
    restart: always
    ports:
      - ${LAND_PORT}:${LAND_PORT}
      - 5556:5555
    networks:
      - agrisistance-network
    command: npm run start:dev agrisistance-land-service

  agrisistance-network-service:
    build:
      context: .
      dockerfile: ./apps/agrisistance-network-service/Dockerfile
    depends_on:
      prisma-migrations:
        condition: service_completed_successfully
    restart: always
    ports:
      - ${NETWORK_PORT}:${NETWORK_PORT}
      - 5557:5555
    networks:
      - agrisistance-network
    command: npm run start:dev agrisistance-network-service

networks:
  agrisistance-network:
    driver: bridge